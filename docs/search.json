[
  {
    "objectID": "bity.html",
    "href": "bity.html",
    "title": "Klasyczne bramki logiczne - algebra Boola",
    "section": "",
    "text": "\\[\n\\newcommand{\\bra}[1]{\\left \\langle #1 \\right \\rvert}\n\\newcommand{\\ket}[1]{\\left \\rvert #1 \\right \\rangle}\n\\newcommand{\\braket}[2]{\\left \\langle #1 \\middle \\rvert #2 \\right \\rangle}\n\\]\nObliczenia (przetwarzanie) wykonywane przez komputer możemy zdefiniować jako transformacje jednego stanu pamięci na inny. Z matematycznego punktu widzenia oznacza to, że obliczenia to funkcje, które przekształcają informacje.\nW przypadku klasycznych komputerów (maszyn cyfrowych) podstawową jednostką pamięci jest bit (ang. binary digit). Funkcje, które operują na bitach nazywamy bramkami logicznymi (ang. logic gates). Bramki logiczne to funkcje Boolowskie, które możemy składać w bardziej złożone układy (ang. circuits). Zdolne są one do wykonywania np. dodawania, mnożenia czy też innych bardziej skomplikowanych operacji. Istotnym aspektem klasyczych bramek logicznych jest również to, że liczba bitów wejściowych nie musi być taka sama jak liczba bitów wyjściowych.\nZ pozoru obliczenia przedstawione w ten sposób wyglądają jako abstrakcjny matematyczny koncept. Jednak jego realizacja zawsze wymaga jakiegoś układu fizycznego realizującego wykonywanie funkcji. Nie ma znaczenia jak ten układ zostanie zrealizowany: kule bilardowe, przełączniki elektroniczne, tranzystory, czy cokolwiek innego. Logika obliczeń jest niezależna od realizacji. Z punktu widzenia realizacji zawsze chodzi nam o kontrolowany sposób zmiany stanu układu.\nObliczenia klasyczne wymagają fizycznej implementacji dwóch (odróżnialnych) stanów (zazwyczaj oznaczamy te stany jako \\(0\\) i \\(1\\)) oraz zbioru braek które pozwalają przechodzić pomiędzy stanami.\nZastosujmy nowe oznaczenia dla tych stanów: \\[0 = \\ket{0} \\] oraz \\[1 = \\ket{1}\\].\nNa wykładzie postaramy się wskazać jak i kiedy logika klasycznych obliczeń może być uogólniona przez logikę obliczeń kwantowych. Jasne jest, że przypadek klasyczny powinien być szczególnym przypadkiem kwantowego."
  },
  {
    "objectID": "bity.html#klasyczne-bramki-logiczne",
    "href": "bity.html#klasyczne-bramki-logiczne",
    "title": "Klasyczne bramki logiczne - algebra Boola",
    "section": "Klasyczne bramki logiczne",
    "text": "Klasyczne bramki logiczne\nZróbmy krótkie przedstawienie niektórych, klasycznych bramek logicznych.\nBramka logiczna jest implementacją funkcji boolowskiej. Operacją logiczną przeprowadzaną na jednym lub kilku binarnych wejściach produkującą jedną binarną wartość wyjściową. \\[f: \\{0,1\\}^{n} \\to \\{0,1\\} \\]\nBramki logiczne możemy wyrazić za pomocą tablicy prawdy (ang. truth table). Tablica ta posiada jedną kolumnę dla każdej zmiennej wejściowej oraz jedną kolumnę dla zmiennej wyjściowej. Kolumna wyjściowa przedstawia wszystkie możliwe wyniki przedstawianej logicznej operacji reprezentowanej przez tablicę. Każdy wiersz tablicy prawdy reprezentuje jedną możliwą kombinację (konfiguracje) danych wejściowych oraz wyniku.\nPodstawowe bramki, które znasz to:\n\nAND - koniunkcja\nOR - alternatywa\nNOT - negacja\nNAND - not and\nXOR - alternatywa wykluczająca\n\n\nUniweralne bramki logiczne - NAND"
  },
  {
    "objectID": "bity.html#fizyczna-realizacja-klasycznych-bitów-i-bramek-logicznych",
    "href": "bity.html#fizyczna-realizacja-klasycznych-bitów-i-bramek-logicznych",
    "title": "Klasyczne bramki logiczne - algebra Boola",
    "section": "Fizyczna realizacja klasycznych bitów i bramek logicznych",
    "text": "Fizyczna realizacja klasycznych bitów i bramek logicznych\nBramka NAND jest bramką uniwersalną, co oznacza, że każdą funkcję boolowską można zrealizować za pomocą układu bramek NAND. Dlatego ważne dla komputerów klasycznych jest, aby znaleźć praktyczną realizację i jej implementację w układach.\nIstnieje wiele fizycznych realizacji bramki NAND.\n\nImplementacja komórki pamięci RAM\nRandom Access Memory (RAM) uzywany jest do przechowywania instrukcji i danych aktualnie używanych przez CPU. Stan pamięci RAM jest tracony gdy urządzenie zostanie odłączone od zasilania. Pamięć RAM jest zorganizowana w komórki, które mogą przechowywać pojedynczy bit informacji. Do implementacji pamięci RAM wykorzystuje się zbiór bramek logicznych (NAND) oraz tranzystorów.\n! DODAC MATERIALY Z UDEMY - SZYFROWANIE jako coś do zrobienia !!"
  },
  {
    "objectID": "info.html",
    "href": "info.html",
    "title": "Narzędzia",
    "section": "",
    "text": "W terminalu (Windows CMD) wpisz\npython\nJeśli nie odnaleziono komendy uruchom polecenie:\npython3\nZwróć uwagę, aby Twoja wersja nie była niższa niż 3.X Aby wyjść z powłoki pythona użyj funkcji exit()\nPython 3.10.9 (main, Dec 15 2022, 17:11:09) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; exit()\n\n\npython3 -m venv &lt;name of env&gt;\n\nsource &lt;name of env&gt;/bin/activate\n# . env/bin/activate\n\n(venv)$ \nSzybka instalacja podstawowych bibliotek i jupyterlab.\npip install --no-cache --upgrade pip setuptools\n\npip install jupyterlab numpy pandas matplotlib scipy\n# jeśli masz plik requirements.txt z potrzebnymi bibliotekami\npip install -r requirements.txt\n# uruchom \njupyterlab\nW przeglądarce internetowej wpisz: localhost:8888\nPo ponownym uruchomieniu przejdź do katalogu w którym utworzyłeś środowisko, następnie uruchom środowisko i jupyterlab.\nsource &lt;name of env&gt;/bin/activate\njupyterlab\n\n\n\nKurs podstaw pythona Tomas Beuzen polecam.\nUtwórz konto na Kaggle, przejdź do zakładki Courses i przerób cały moduł Pythona. Zawiera on:\n\nwyrażenia i zmienne\nfunkcje\nwarunki i flow programu\nlisty\npętle\nstringi i słowniki\ndodawanie i używanie zewnętrznych bibliotek"
  },
  {
    "objectID": "info.html#python",
    "href": "info.html#python",
    "title": "Narzędzia",
    "section": "",
    "text": "W terminalu (Windows CMD) wpisz\npython\nJeśli nie odnaleziono komendy uruchom polecenie:\npython3\nZwróć uwagę, aby Twoja wersja nie była niższa niż 3.X Aby wyjść z powłoki pythona użyj funkcji exit()\nPython 3.10.9 (main, Dec 15 2022, 17:11:09) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; exit()\n\n\npython3 -m venv &lt;name of env&gt;\n\nsource &lt;name of env&gt;/bin/activate\n# . env/bin/activate\n\n(venv)$ \nSzybka instalacja podstawowych bibliotek i jupyterlab.\npip install --no-cache --upgrade pip setuptools\n\npip install jupyterlab numpy pandas matplotlib scipy\n# jeśli masz plik requirements.txt z potrzebnymi bibliotekami\npip install -r requirements.txt\n# uruchom \njupyterlab\nW przeglądarce internetowej wpisz: localhost:8888\nPo ponownym uruchomieniu przejdź do katalogu w którym utworzyłeś środowisko, następnie uruchom środowisko i jupyterlab.\nsource &lt;name of env&gt;/bin/activate\njupyterlab\n\n\n\nKurs podstaw pythona Tomas Beuzen polecam.\nUtwórz konto na Kaggle, przejdź do zakładki Courses i przerób cały moduł Pythona. Zawiera on:\n\nwyrażenia i zmienne\nfunkcje\nwarunki i flow programu\nlisty\npętle\nstringi i słowniki\ndodawanie i używanie zewnętrznych bibliotek"
  },
  {
    "objectID": "info.html#zacznij-korzystać-z-serwisu-github",
    "href": "info.html#zacznij-korzystać-z-serwisu-github",
    "title": "Narzędzia",
    "section": "Zacznij korzystać z serwisu GitHub",
    "text": "Zacznij korzystać z serwisu GitHub\n\n\n\nTekst na podstawie strony jak korzystać z serwisu github\nPracując nad projektem np. praca magisterska, (samodzielnie lub w zespole) często potrzebujesz sprawdzić jakie zmiany, kiedy i przez kogo zostały wprowadzone do projektu. W zadaniu tym świetnie sprawdza się system kontroli wersji czyli GIT.\nGit możesz pobrać i zainstalować jak zwykły program na dowolnym komputerze. Jednak najczęściej (małe projekty) korzysta się z serwisów z jakimś systemem git. Jednym z najbardziej rozpoznawanych jest GitHub dzięki któremu możesz korzystać z systemu git bez jego instalacji na swoim komputerze.\nW darmowej wersji serwisu GitHub swoje pliki możesz przechowywać w publicznych (dostęp mają wszyscy) repozytoriach.\nSkupimy się wyłącznie na darmowej wersji serwisu GitHub.\ngit --version\n\nStruktura GitHuba\nNa najwyższym poziomie znajdują się konta indywidualne (np http://github.com/sebkaz, bądź zakładane przez organizacje. Użytkownicy indywidualni mogą tworzyć repozytoria publiczne (public ) bądź prywatne (private).\nJeden plik nie powinien przekraczać 100 MB.\nRepo (skrót do repozytorium) tworzymy za pomocą Create a new repository. Każde repo powinno mieć swoją indywidualną nazwę.\n\n\nBranche\nGłówna (tworzona domyślnie) gałąź rapozytorium ma nazwę master.\n\n\nNajważniejsze polecnia do zapamiętania\n\nściąganie repozytorium z sieci\n\ngit clone https://adres_repo.git\n\nW przypadku githuba możesz pobrać repozytorium jako plik zip.\n\n\nTworzenie repozytorium dla lokalnego katalogu\n\n# tworzenie nowego katalogu\nmkdir datamining\n# przejście do katalogu\ncd datamining\n# inicjalizacja repozytorium w katalogu\ngit init\n# powinien pojawić się ukryty katalog .git\n# dodajmy plik\necho \"Info \" &gt;&gt; README.md\n\nPołącz lokalne repozytorium z kontem na githubie\n\ngit remote add origin https://github.com/&lt;twojGit&gt;/nazwa.git\n\nObsługa w 3 krokach\n\n# sprawdź zmiany jakie zostały dokonane\ngit status\n# 1. dodaj wszystkie zmiany\ngit add .\n# 2. zapisz bierzący stan wraz z informacją co zrobiłeś\ngit commit -m \" opis \"\n# 3. potem już zostaje tylko\ngit push origin master\nWarto obejrzeć Youtube course.\nCiekawe i proste wprowadzenie mozna znaleźć tutaj"
  },
  {
    "objectID": "info.html#zacznij-korzystać-z-dockera",
    "href": "info.html#zacznij-korzystać-z-dockera",
    "title": "Narzędzia",
    "section": "Zacznij korzystać z Dockera",
    "text": "Zacznij korzystać z Dockera\n\n\n\nW celu pobrania oprogramowania docker na swój system przejdź do strony.\nJeżli wszystko zainstalowało się prawidłowo wykonaj następujące polecenia:\n\nSprawdź zainstalowaną wersję\n\ndocker --version\n\nŚciągnij i uruchom obraz Hello World i\n\ndocker run hello-world\n\nPrzegląd ściągnietych obrazów:\n\ndocker image ls\n\ndocker images\n\nPrzegląd uruchomionych kontenerów:\n\ndocker ps \n\ndocker ps -all\n\nZatrzymanie uruchomionego kontenera:\n\ndocker stop &lt;CONTAINER ID&gt;\n\nUsunięcie kontenera\n\ndocker rm -f &lt;CONTAINER ID&gt;\nPolecam również krótkie intro"
  },
  {
    "objectID": "sylabus.html",
    "href": "sylabus.html",
    "title": "Sylabus",
    "section": "",
    "text": "Nazwa przedmiotu: Wstęp do kwantowego uczenia maszynowego\nJednostka: SGH w Warszawie\nKod przedmiotu: 232530-D, 232530-S\nPunkty ECTS: 3\nJęzyk prowadzenia: polski\nPoziom przedmiotu: średnio-zaawansowany\nProwadzący: Sebastian Zając, sebastian.zajac@sgh.waw.pl\nWebsite: https://sebkaz-teaching.github.io/intro_to_qml/"
  },
  {
    "objectID": "sylabus.html#cel-przedmiotu",
    "href": "sylabus.html#cel-przedmiotu",
    "title": "Sylabus",
    "section": "Cel Przedmiotu",
    "text": "Cel Przedmiotu\nJeszcze do niedawna rozwój technologiczny oparty był na zmniejszaniu rozmiaru tranzystorów i zwiększaniu mocy obliczeniowej procesorów. Ze względu na fizyczne aspekty natury proces ten, od pewnego momentu, musi uwzględniać ograniczenia fizyki kwantowej. Przyszłość może jednak wykorzystać inne narzędzia, których możliwości wykraczają poza klasyczne moce obliczeniowe. Mimo, iż konstrukcja komputerów kwantowych to wciąż etap inżynierski, to okazuje się, że można już wskazać i wykorzystać je do tworzenia algorytmów, które można wykorzystać w dziedzinie uczenia maszynowego. Wykorzystanie algorytmów kwantowych pozwala zmniejszyć czas przetwarzania dużej ilości danych, a tym samym rozszerza możliwości przetwarzania i modelowania danych. Przedstawione na zajęciach biblioteki - IBM qiskit czy Pennylane (python) pozwalają na prostą i szybką konstrukcje dowolnego algorytmu kwantowego. Algorytmy te, jak np. algorytm Grovera wykorzystać można do wielu problemów obliczeniowych uczenia maszynowego bądź do konstrukcji kwantowych sieci neuronowych."
  },
  {
    "objectID": "sylabus.html#program-przedmiotu",
    "href": "sylabus.html#program-przedmiotu",
    "title": "Sylabus",
    "section": "Program przedmiotu",
    "text": "Program przedmiotu\n\nEfekty kształcenia\nWiedza:\n\n\nZna i rozumie koncepcje działania komputera klasycznego i kwantowego\nZna metody kwantowego uczenia maszynowego możliwe do wykorzystania w biznesie\nRozumie potrzebę i możliwości zastosowania komputerów kwantowych\n\n\nUmiejętności:\n\n\nPotrafi stworzyć proste algorytmy z wykorzystaniem kwantowych bramek logicznych\nUmie wykorzystać biblioteki pythonowe do generowania kodów obliczeń kwantowych\nPotrafi wykorzystać metody nadzorowane wykorzystywane w kwantowym uczeniu maszynowym\nPotrafi wykorzystać metody nienadzorowane wykorzystywane w kwantowym uczeniu maszynowym\nUmie stworzyć prostą kwantową sieć neuronową\n\n\nKompetencje społeczne:\n\n\nformułuje problem biznesowy wraz z jego informatycznym rozwiązaniem\nuzupełniania wiedzę teoretyczną jak i praktyczną, w zakresie teorii, programowania, modelowania, nowych technologii informatycznych z wykorzystaniem kwantowego uczenia maszynowego"
  },
  {
    "objectID": "sylabus.html#realizacja-przedmiotu",
    "href": "sylabus.html#realizacja-przedmiotu",
    "title": "Sylabus",
    "section": "Realizacja przedmiotu",
    "text": "Realizacja przedmiotu\n\negzamin testowy: 40%\nkolokwium: 20%\nreferaty/eseje: 40%"
  },
  {
    "objectID": "sylabus.html#literatura",
    "href": "sylabus.html#literatura",
    "title": "Sylabus",
    "section": "Literatura",
    "text": "Literatura\n\nM. Schuld, F. Petruccione - Supervised Learning with Quantum Computers, Quantum Science and Technology. Springer 2018 https://doi.org/10.1007/978-3-319-96424-9\nC. Bernhardt - Obliczenia kwantowe dla każdego, Wydawnictwo Naukowe PWN 2020\nE. R. Johnston, N. Harrigan, M.Gimeno-Segovia - Komputer kwantowy.Programowanie, algorytmy, kod. Helion 2020\nS. Zajac - Modelowanie dla Biznesu. Analiza danych w czasie rzeczywistym. Oficyna Wydawnicza SGH. 2021\nA. K. Bishwas, A. Nani, V. Palade “Quantum Supervised Clustering Algorithm for Big Data” 2018- 3rd International Conference for Convergence in Technology.\nC. Ciliberto er al. “Statistical limits of supervised quantum learning” Physical Review A 102. 4. 2020\nN Wiebe, A. Kapoor, K M. Svore “Quantum perceptron models” NIPS’16 Procedings of the 30th Internationa Conference on Neural information processing Systems. Vol. 29. 2016"
  },
  {
    "objectID": "sylabus.html#literatura-uzupełniająca",
    "href": "sylabus.html#literatura-uzupełniająca",
    "title": "Sylabus",
    "section": "Literatura uzupełniająca",
    "text": "Literatura uzupełniająca\n\nMichael A. Nielsen & Isaac L. Chuang - Quantum Computation and Quantum Information, Cambridge University Press, 2010\nK. Przanowski, S. Zając - Modelowanie dla Biznesu. Metody Machine learning, Modele portfela consumer finance, modelek rekurencyjne analizy przeżycia, modele scoringowe. Oficyna Wydawnicza SGH. 2020\nE. Frątczak - Modelowanie dla Biznesu. Regresja Logistyczna, Regresja Poissona, Survival Data Mining, CRM, Credit Scoring. Oficyna Wydawnicza SGH. 2019"
  },
  {
    "objectID": "ksiazki.html",
    "href": "ksiazki.html",
    "title": "Książki i strony WWW",
    "section": "",
    "text": "Chris Bernhardt, Obliczenia kwantowe dla każdego. PWN 2020 &gt; Wyjaśnienie jak to działa w obliczeniach kwantowych.\nMichel Le Bellac, Wstęp do informatyki kwantowej. PWN 2011 &gt; Trudniejsza, dużo matematyki i fizyki.\nThomas G. Wong, Introduction to Classical and Quantum Computing. Rooted Grove 2022. &gt; Bardzo dobra!, dużo przykładów, dużo ciekawych informacji wyjaśnianych bardzo szczegółowo.\nA. Jacquier, O. Kondratyev, Quantum Machine Learning and Optimisation in Finance. On the Road to Quantum Advantage."
  },
  {
    "objectID": "ksiazki.html#książki",
    "href": "ksiazki.html#książki",
    "title": "Książki i strony WWW",
    "section": "",
    "text": "Chris Bernhardt, Obliczenia kwantowe dla każdego. PWN 2020 &gt; Wyjaśnienie jak to działa w obliczeniach kwantowych.\nMichel Le Bellac, Wstęp do informatyki kwantowej. PWN 2011 &gt; Trudniejsza, dużo matematyki i fizyki.\nThomas G. Wong, Introduction to Classical and Quantum Computing. Rooted Grove 2022. &gt; Bardzo dobra!, dużo przykładów, dużo ciekawych informacji wyjaśnianych bardzo szczegółowo.\nA. Jacquier, O. Kondratyev, Quantum Machine Learning and Optimisation in Finance. On the Road to Quantum Advantage."
  },
  {
    "objectID": "ksiazki.html#strony-www",
    "href": "ksiazki.html#strony-www",
    "title": "Książki i strony WWW",
    "section": "Strony WWW",
    "text": "Strony WWW\n\nPeter Shor Wykład\n\n\nSoftware\n\nGithub\nGit-instrukcja\nwww.python.org\nPyPI python libraries\nAnaconda\nDocker\n\n\n\nPakiety python\n\nQiskit\nPennyLane\nYao\n\n\n\nEdytory tekstu\n\nNotepad++\nSublime Text\nVisual Studio Code\n\n\n\nMarkdown\n\nMD\n\n\n\nPython\n\nChris Albon Technical Notes on Using Data Science & AI\n40+ Python Statistics For Data Science Resources\nPractical Business Python"
  },
  {
    "objectID": "wyklad1.html",
    "href": "wyklad1.html",
    "title": "Komputery klasyczne i kwantowe.",
    "section": "",
    "text": "Co oznacza termin kwantowe uczenie maszynowe?\nUczenie maszynowe to nauka i ,,sztuka’’ opisująca jak sprawdzić by komputery mogły uczyć się na podstawie danych tak by rozwiązać problemy, których typowe programowanie nie miałoby sensu (lub byłoby zbyt skomplikowane).\nObliczenia kwantowe opisują przetwarzenie informacji na urządzeniach pracujących zgodnie z zasadami mechaniki kwantowej.\n\nUwaga! klasyczne komputery (tranzystory) również działają zgodnie z zasadami mechaniki kwantowej, ale wykonywane operacje opierają się o logikę klasyczną.\n\nOba kierunki są istotne w procesie przetwarzania danych obecnie i w niedalekiej przyszłości. Dlatego naturalnym pytaniem jest jak je ze sobą połączyć?\nQML to zrealizowanie metod uczenia maszynowego, które mogą być wykonywane na komputerach kwantowych. Istotnym kierunkiem jest również analiza metod matematycznych wykorzystywanych w mechanice kwantowej i ich zastosowaniu w uczeniu maszynowym.\n\nyou start with classical mechanics and electrodynamics, solving lots of grueling differential equations at every step. Then you learn about the “black-body paradox” and various strange experimental results, and the great crisis these things posed for physics. Next you learn a complicated patchwork of ideas that physicists invented between 1900 and 1926 to try to make the crisis go away. Then, if you’re lucky, after years of study you funally get around to the central coceptual point: that nature is described ot by probabilities (which are always non-negative), but by numbers called amplitudes that can be positive, negative, or even complex. Scott Aaronson, Quantum Computing Since Democritus\n\nKwantowe uczenie maszynowe możemy określić jako uczenie maszynowe realizowane na komputerach kwantowych. Zasadniczym jest pytanie na ile i czy wogóle komputery kwantowe mogą poprawić jakość modeli uczenia maszynowego i czy pozwalają zrealizować coś więcej niż wykorzystanie klasycznych komputerów.\nOdpowiedź To zależy:\n\njaki problem\njakie dane\njaki typ analizy\njaki typ komputera kwantowego procesory kwantowe\nco znaczy lepiej? precyzja, czas, koszt, skalowalność, zużycie energii, …"
  },
  {
    "objectID": "wyklad1.html#quntum-machine-learning",
    "href": "wyklad1.html#quntum-machine-learning",
    "title": "Komputery klasyczne i kwantowe.",
    "section": "",
    "text": "Co oznacza termin kwantowe uczenie maszynowe?\nUczenie maszynowe to nauka i ,,sztuka’’ opisująca jak sprawdzić by komputery mogły uczyć się na podstawie danych tak by rozwiązać problemy, których typowe programowanie nie miałoby sensu (lub byłoby zbyt skomplikowane).\nObliczenia kwantowe opisują przetwarzenie informacji na urządzeniach pracujących zgodnie z zasadami mechaniki kwantowej.\n\nUwaga! klasyczne komputery (tranzystory) również działają zgodnie z zasadami mechaniki kwantowej, ale wykonywane operacje opierają się o logikę klasyczną.\n\nOba kierunki są istotne w procesie przetwarzania danych obecnie i w niedalekiej przyszłości. Dlatego naturalnym pytaniem jest jak je ze sobą połączyć?\nQML to zrealizowanie metod uczenia maszynowego, które mogą być wykonywane na komputerach kwantowych. Istotnym kierunkiem jest również analiza metod matematycznych wykorzystywanych w mechanice kwantowej i ich zastosowaniu w uczeniu maszynowym.\n\nyou start with classical mechanics and electrodynamics, solving lots of grueling differential equations at every step. Then you learn about the “black-body paradox” and various strange experimental results, and the great crisis these things posed for physics. Next you learn a complicated patchwork of ideas that physicists invented between 1900 and 1926 to try to make the crisis go away. Then, if you’re lucky, after years of study you funally get around to the central coceptual point: that nature is described ot by probabilities (which are always non-negative), but by numbers called amplitudes that can be positive, negative, or even complex. Scott Aaronson, Quantum Computing Since Democritus\n\nKwantowe uczenie maszynowe możemy określić jako uczenie maszynowe realizowane na komputerach kwantowych. Zasadniczym jest pytanie na ile i czy wogóle komputery kwantowe mogą poprawić jakość modeli uczenia maszynowego i czy pozwalają zrealizować coś więcej niż wykorzystanie klasycznych komputerów.\nOdpowiedź To zależy:\n\njaki problem\njakie dane\njaki typ analizy\njaki typ komputera kwantowego procesory kwantowe\nco znaczy lepiej? precyzja, czas, koszt, skalowalność, zużycie energii, …"
  },
  {
    "objectID": "wyklad1.html#sztuczna-inteligencja",
    "href": "wyklad1.html#sztuczna-inteligencja",
    "title": "Komputery klasyczne i kwantowe.",
    "section": "Sztuczna inteligencja",
    "text": "Sztuczna inteligencja\n\nHistoria AI sięga 1950 roku (A. Turing). Rozwój technologii związanych z danymi ustrukturyzowanymi i nieustrukturyzowanymi realizowany np. w:\n\nrozpoznawanie i tworzenie ,,mowy’’\n,,rozumienie’’ obrazów i filmów\nrozgrywanie gier\nrekomendacje\nsystemy diagnostyczne\nplanowanie\npodejmowanie decyzji\nbooty, agenci …\n\nZadania te realizowane są w oparciu o uczenie maszynowe (Machine Learning) i głębokie sieci neuronowe (Deep Learning).\nDlaczego tak chętnie używamy:\n\nWykładniczy wzrost ilości (treningowych) danych dostępnych w social mediach, internecie, aplikacjach mobilnych, IoT.\nWzrost możliwości i spadek ceny (kosztów) jakości sprzętu komputerowego - co-procesory GPU, TPU, …\nOprogramowanie Open Source\nPrzewaga konkurencyjna przedsiębiorstw z AI na firmami bez AI"
  },
  {
    "objectID": "wyklad1.html#klasyczne-komputery",
    "href": "wyklad1.html#klasyczne-komputery",
    "title": "Komputery klasyczne i kwantowe.",
    "section": "Klasyczne komputery",
    "text": "Klasyczne komputery\nKomputer to fizyczne urządzenie bazujące na obwodach elektronicznych (electronic circuits), które służy do przetwarzania informacji. Algorytmy (programy komputerowe - software) to przepisy jak manipulować informacją reprezentowaną przez prąd w obwodzie aby wykonywać obliczenia.\nDla wszystkich praktycznych przypadków wystarczy nam opis makroskopowy i klasyczne teorie do opisu własności prądu w obwowdach. Jedak gdy naszym jest realizacja obliczeń z wykorzystaniem własności mikro okazuje się, że klasyczny opis przestaje być wystarczający i musimy użyć mechaniki kwantowej. Jak do tej pory jest to najlepiej przetestowany i stosowany opis mikroświata jaki znamy. Komputer, na którym obliczenia wykonywane są zgodnie z zasadami mechaniki kwantowej nazywamy komputerem kwantowym.\n\nMoore’s law An observation that the number of transistors on microchip roughly doubles every two years, whereas its cost is halved over that same timeframe. The growth of microprocessors is exponential\n\nZwiększenie szybkości działania oraz pojemności klasycznych komputerów co dwa lata zmniejszając przy tym koszty.\n\nFizyczne (klasyczne) ograniczenia dla procesorów\n\nRozmiary tranzystora \\(\\sim\\) rozmiary atomów - lata 90’te \\(500 nm\\) obecnie \\(14 nm\\) i \\(7 nm\\).\nPrędkość światła \\(\\sim\\) max. prędkość przesyłu informacji.\nwysoki koszt wytwarzania (kierunek układów wieloprocesorowych)\nwysoki pobór prądu, ciepło"
  },
  {
    "objectID": "wyklad1.html#obliczenia-kwantowe",
    "href": "wyklad1.html#obliczenia-kwantowe",
    "title": "Komputery klasyczne i kwantowe.",
    "section": "Obliczenia kwantowe",
    "text": "Obliczenia kwantowe\nHistoria\n\n1936 Alan Turing On Computable Numbers (Hilbert Problems) - universal computing machine local\n1976 Roman S. Ingarden - Quantum Information Theory\n1980 Paul Benioff - teoretyczna możliwość komputerów kwantowych “Computer as a Physical System…”\n1981 Richard Feynman - Klasyczne komputery nie podołają z symulowaniem procesów kwantowych. {“Nature isn’t classical, dammit, and if you want to make a simulation of nature, you’d better make it quantum mechanical, and by golly it’s a wonderful problem, because it doesn’t look so easy.”}\n1985 David Deutsch pierwszy opis kwantowej maszyny Turinga. Algorytm do uruchomienia na komputerze kwantowym. Bramki kwantowe.\n1994 Peter Shor - Algorytm faktoryzacji liczb w czasie wielomianowym.\n1996 Lov Grover - Algorytm Grover’a “A fast quantum mechanical algorithm for database search”\n2000 pierwszy 5-kubiotwy kwantowy komputer (oparty na nuklearnym rezonansie magnetycznym).\n2001 demonstracja algorytmu Shora\n2007 implementacja algorytmu Deutschas’a\n2011 D-Wave pierwsza sprzedaż komercyjnego komputera kwantowego\n2013 pierwszy komputer kwantowy w Google\n2017 IBM - klasyczne superkomputery nie mogą symulować więcej niż 56 kubitów - quantum supremacy\n23 październik 2019 Google ogłasza uzyskanie QS na 53 kubitach - superkomputer powinien działać i liczyć 10000 lat.\nIBM zmienia algorytm próbkowania uzyskując lepszy wynik na superkomputerze niż Google.\n2020 University of Science and Technology of China (Jian-Wei Pan) 76 fotonowych kubitów na komputerze Jiuzhang - 20 sekund samplingu = 600 milionów lat obliczeń na super komputerze.\n2021 USTC … 2022 Xanadu\n\nOd około 1990 roku Fizycy i inforamtycy pracują nad fizyczną realizacją komputerów kwantowych. Jednym ze sposobów realizacji obliczeń wykonywanych na komputerach kwantowych jest model oparty o kwantowe obwody (quantum circuit), który w swoim działaniu wykorzystuje qubity zamiast bitów. Analogicznie do obwodów klasycznych możemy zdefiniować bramki kwantowe (quantum gates), które realizują operacje na qubitach. Fizyczne zbudowanie komputera kwantowego, czy raczej kubitu nie jest trywialne, gdyż wymaga manipulacji bardzo małym układem, który zazwyczaj wrażliwy jest na każdy rodzaj oddziaływania (dekoherencja)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Informacje ogólne",
    "section": "",
    "text": "Kod: 232530-D\nSemestr zimowy 2023/2024,\nSGH Szkoła Główna Handlowa w Warszawie\nPodstawowe informacje znajdziesz w sylabusie.\nCiekawe książki i strony internetowe zamieszczone zostały w zakładce książki. Jeśli chciał(a)byś coś dodać prześlij informację przez MS teams."
  },
  {
    "objectID": "index.html#var-main.nazwa",
    "href": "index.html#var-main.nazwa",
    "title": "Informacje ogólne",
    "section": "",
    "text": "Kod: 232530-D\nSemestr zimowy 2023/2024,\nSGH Szkoła Główna Handlowa w Warszawie\nPodstawowe informacje znajdziesz w sylabusie.\nCiekawe książki i strony internetowe zamieszczone zostały w zakładce książki. Jeśli chciał(a)byś coś dodać prześlij informację przez MS teams."
  },
  {
    "objectID": "index.html#kalendarz",
    "href": "index.html#kalendarz",
    "title": "Informacje ogólne",
    "section": "Kalendarz",
    "text": "Kalendarz\n\nWykład\nWykład jest realizowany w trybie hybrydowym. Jest on NIEOBOWIĄZKOWY i odbywa się w sali C5D.\n\n02-10-2023 (poniedziałek) 11:40-13:20 - Wykład 1\n\nHistoria klasycznego i kwantowego komputera i jego zastosowania. Efekty kwantowe wykorzystywane do przyśpieszenia obliczeń.\n\n09-10-2023 (poniedziałek) 11:40-13:20 - Wykład 2\n\nKlasyczne bramki logiczne - algebra Boola, szyfrowanie\n\n16-10-2023 (poniedziałek) 11:40-13:20 - Wykład 3\n\nPrzestrzenie wektorowe, stany kwantowe, reprezentacja klasycznych i kwantowych bitów\n\n23-10-2023 (poniedziałek) 11:40-13:20 - Wykład 4\n\nKwantowe bramki logiczne w prostych algorytmach i obwodach kwantowych\n\n30-10-2023 (poniedziałek) 11:40-13:20 - Wykład 5\n\nKwantowy Machine Learning w biznesie - metody i implementacje\n\n\nLaboratoria\nWszystkie laboratoria odbywają się w sali C5D.\n\n06-11-2023 (poniedziałek) 11:40-13:20 - Lab1\n\nPrzygotowanie środowiska programistycznego python z wykorzystaniem narzędzia Docker\n\n13-11-2023 (poniedziałek) 11:40-13:20 - Lab2\n\nKwantowe bity z wykorzystaniem biblioteki IBM qiskit i pennylane\n\n20-11-2023 (poniedziałek) 11:40-13:20 - Lab3\n\nJedno - kubitowe bramki logiczne\n\n27-11-2023 (poniedziałek) 11:40-13:20 - Lab4\n\nWielokubitowe bramki logiczne\n\n04-12-2023 (poniedziałek) 11:40-13:20 - Lab5\n\nAlgorytm faktoryzacji Shora, przeszukiwanie wg algorytmu Grovera.\n\n11-12-2023 (poniedziałek) 11:40-13:20 - Lab6\n\nKlasyczny i kwantowy perceptron - realizacja w bibliotece qiskit\n\n18-12-2023 (poniedziałek) 11:40-13:20 - Lab7\n\nVariational quantum classifiers - klasyfikacja danych iris\n\n08-01-2024 (poniedziałek) 11:40-13:20 - Lab8\n\nklasyfikacja danych MNIST z wykorzystaniem biblioteki PyTorch Quantum\n\n15-01-2024 (poniedziałek) 11:40-13:20 - Lab9\n\nAlgorytm qPCA z wykorzystaniem do modelowania cen instrumentów finansowych\n\n22-01-2024 (poniedziałek) 11:40-13:20 - Lab10\n\nRealizacje kwantowych sztucznych sieci neuronowych - wprowadzenie"
  },
  {
    "objectID": "index.html#technologie",
    "href": "index.html#technologie",
    "title": "Informacje ogólne",
    "section": "Technologie",
    "text": "Technologie\nUczestnicząc w zajęciach musisz opanować i przynajmniej w podstawowym zakresie posługiwać się następującymi technologiami informatycznymi:\n\nGIT\nPython, Jupyter notebook, Jupyter lab, Colab\nDocker"
  }
]